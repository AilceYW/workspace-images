name: Build from Pull Request
on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout workspace-images
        uses: actions/checkout@v2
        with:
          repository: gitpod-io/workspace-images

      - name: üîÜ Debug
        run: |
          sudo snap install yq
          cd dazzle-rewrite
          tags=$(yq e .combiner.combinations[].name dazzle.yaml)
          for tag in $tags
          do
            echo $tag
          done

      # - name: üîß Setup pre-commit
      #   run: |
      #     sudo apt-get install python3-pip shellcheck
      #     curl -sSL https://github.com/mvdan/sh/releases/download/v3.4.2/shfmt_v3.4.2_linux_amd64 -o shfmt
      #     sudo mv shfmt /usr/local/bin/shfmt && sudo chmod +x /usr/local/bin/shfmt
      #     sudo pip3 install pre-commit

      # - name: ü§ì Run pre-commit
      #   run: |
      #     pre-commit run --all-files

      # - name: üîÜ Install dazzle
      #   run: |
      #     curl -sSL https://github.com/gitpod-io/dazzle/releases/download/v0.1.6/dazzle_0.1.6_Linux_x86_64.tar.gz | sudo tar -xvz -C /usr/local/bin

      - name: üèóÔ∏è Setup buildkit
        run: |
          curl -sSL https://github.com/moby/buildkit/releases/download/v0.9.3/buildkit-v0.9.3.linux-amd64.tar.gz | sudo tar xvz -C /usr
          sudo buildkitd --oci-worker=true --oci-worker-net=host --debug --group docker &
          sudo su -c "while ! test -S /run/buildkit/buildkitd.sock; do sleep 0.1; done"
          sudo chmod +777 /run/buildkit/buildkitd.sock

      - name: üóÑÔ∏è Registry cache
        uses: actions/cache@v2
        with:
          path: ~/registry
          key: ${{ runner.os }}-pull-request-cache

      - name: üì¶ Setup local registry
        run: |
          docker run -it --detach --publish 5000:5000 --volume ~/registry:/var/lib/registry registry:2

      - name: Remote retag images
        run: |
          docker pull localhost:5000/workspace-images:full

      - name: Remote retag images
        run: |
          REGISTRY_NAME="http://localhost:5000"
          REPOSITORY_OLD=workspace-images
          REPOSITORY_NEW=workspace-full
          CONTENT_TYPE="application/vnd.docker.distribution.manifest.v2+json"
          TAG_OLD=full
          TAG_NEW=latest
          MANIFEST=$(curl -H "Accept: ${CONTENT_TYPE}" "${REGISTRY_NAME}/v2/${REPOSITORY_OLD}/manifests/${TAG_OLD}")
          echo "${MANIFEST}"
          curl -X PUT -H "Content-Type: ${CONTENT_TYPE}" -d "${MANIFEST}" "${REGISTRY_NAME}/v2/${REPOSITORY_NEW}/manifests/${TAG_NEW}"

      - name: Pull retagged images
        run: |
          docker pull localhost:5000/workspace-full:latest

      # - name: üî® Dazzle build
      #   run: |
      #     cd dazzle-rewrite
      #     dazzle build localhost:5000/workspace-images

      # - name: üñáÔ∏è Dazzle combine
      #   run: |
      #     cd dazzle-rewrite
      #     dazzle combine localhost:5000/workspace-images --all

      # - name: Set up Cloud SDK
      #   uses: google-github-actions/setup-gcloud@master
      #   with:
      #     version: 366.0.0

      # - name: Authenticate to Google Cloud
      #   id: "auth"
      #   uses: "google-github-actions/auth@v0.4.3"
      #   with:
      #     token_format: "access_token"
      #     workload_identity_provider: ${{env.WORKLOAD_IDENTITY_POOL_ID}}
      #     service_account: ${{env.IAM_SERVICE_ACCOUNT}}

      # - name: Configuring container registry credentials
      #   run: |
      #     sudo skopeo login -u oauth2accesstoken --password=${{ steps.auth.outputs.access_token }} https://${{env.IMAGE_REPO}}

      # - name: üê≥ Copy images to Artifact Registry
      #   run: |
      #     sudo skopeo copy \
      #       --src-tls-verify=false \
      #       --registries-conf=.github/registries.conf \
      #       --src yaml \
      #       --dest docker \
      #       .github/sync-containers.yml ${{env.IMAGE_REPO}}/workspace-base-images/workspace-base-images/workspace-image
